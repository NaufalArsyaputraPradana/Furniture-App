---
deployment:
  tasks:
    # Backup current deployment
    - export BACKUP_DIR="/tmp/backup_$(date +%Y%m%d_%H%M%S)"
    - mkdir -p $BACKUP_DIR
    - cp -r $DEPLOYPATH/* $BACKUP_DIR/ 2>/dev/null || true
    
    # Clear old files and copy new files
    - /bin/cp -R * $DEPLOYPATH
    
    # Set proper permissions
    - find $DEPLOYPATH -type f -exec chmod 644 {} \;
    - find $DEPLOYPATH -type d -exec chmod 755 {} \;
    - chmod -R 755 $DEPLOYPATH/storage
    - chmod -R 755 $DEPLOYPATH/bootstrap/cache
    - chmod 755 $DEPLOYPATH/artisan
    
    # Install/Update Composer dependencies (production mode)
    - cd $DEPLOYPATH && composer install --no-dev --optimize-autoloader --no-interaction
    
    # Copy environment file if not exists
    - cd $DEPLOYPATH && [ ! -f .env ] && cp .env.example .env || true
    
    # Generate application key if not set
    - cd $DEPLOYPATH && php artisan key:generate --no-interaction || true
    
    # Clear and cache configuration
    - cd $DEPLOYPATH && php artisan config:clear
    - cd $DEPLOYPATH && php artisan cache:clear
    - cd $DEPLOYPATH && php artisan route:clear
    - cd $DEPLOYPATH && php artisan view:clear
    
    # Run database migrations (be careful in production)
    # - cd $DEPLOYPATH && php artisan migrate --force
    
    # Cache configurations for better performance
    - cd $DEPLOYPATH && php artisan config:cache
    - cd $DEPLOYPATH && php artisan route:cache
    - cd $DEPLOYPATH && php artisan view:cache
    
    # Create storage link
    - cd $DEPLOYPATH && php artisan storage:link
    
    # Set final permissions
    - chmod -R 755 $DEPLOYPATH/storage
    - chmod -R 755 $DEPLOYPATH/bootstrap/cache
